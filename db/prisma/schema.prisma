// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String   @unique
  content   String  @unique

  deposit   Deposit?
  author    User     @relation(fields: [authorId], references: [id])
  campaign  Campaign @relation(fields: [campaignId], references: [id])

  authorId  Int
  campaignId Int
}

model Deposit {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  token      String
  network    String
  address    String
  blockchain String
  funded     Boolean  @default(false)
  message    String

  post   Post @relation(fields: [postId], references: [id])
  postId Int  @unique
}

model User {
  id        Int     @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userNameTwitter String? @unique

  email String? @unique
  password String?

  posts     Post[]
  campaigns Campaign[]
}

model Campaign {
  id        Int     @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  title     String   @unique
  description String?
  // deve ser setado pela listener do smart contract
  tokenName   String?
  tokenSymbol String?
  tokenAddress     String?
  network   String?
  blockchain  String?  
  valuePerShare Decimal?
  totalValue  Int?
  // deve ser setado pela listener do smart contract
  contentsToValidation String[]
  content   String
  published Boolean? @default(true)

  posts  Post[]
  creator User @relation(fields: [creatorId], references: [id])

  creatorId Int
}
