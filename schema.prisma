// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Blockchain {
  id          Int    @id @default(autoincrement())
  name        String
  chainId     Int    @unique
  description String


  nativeTokenId Int?   @unique
  nativeToken   Token? @relation(fields: [nativeTokenId], references: [id])

  tokens Token[] @relation(name: "tokenList")
}

model Token {
  id           Int        @id @default(autoincrement())
  address      String
  name         String
  symbol       String
  decimals     Int
  totalSupply  Decimal
  native       Boolean
  blockchainId Int
  blockchain   Blockchain @relation(name: "tokenList", fields: [blockchainId], references: [id])

  nativeTokenFor Blockchain[]
  Campaign       Campaign[]

  @@unique([address, blockchainId])
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String   @unique
  tweetId   String   @unique
  content   String

  deposit  Deposit?
  user     User     @relation(fields: [userId], references: [id])
  campaign Campaign @relation(fields: [campaignId], references: [id])

  userId     Int
  campaignId Int
}

model Deposit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  funded    Boolean  @default(false)
  message   String?
  address   String
  value     Decimal

  post   Post @relation(fields: [postId], references: [id])
  postId Int  @unique
}

model User {
  id              Int      @id @default(autoincrement())
  twitterUsername String   @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  posts Post[]
}

model Campaign {
  id           Int      @id @default(autoincrement())
  campaignHash String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String   @unique
  description  String?
  // deve ser setado pela listener do smart contract

  tokenId          Int?
  token            Token?   @relation(fields: [tokenId], references: [id])
  valuePerShare    Decimal  @default(0)
  totalValue       Decimal  @default(0)
  // deve ser setado pela listener do smart contract
  mandatoryContent String[]
  forbiddenContent String[]
  suggestion       String
  published        Boolean  @default(true)

  posts Post[]

  creator   Creator @relation(fields: [creatorId], references: [id])
  creatorId Int
}

model Creator {
  id            Int        @id @default(autoincrement())
  walletAddress String     @unique
  campaigns     Campaign[]
}
