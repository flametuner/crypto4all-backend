// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String   @unique
  content   String   @unique

  deposit  Deposit?
  author   User     @relation(fields: [authorId], references: [id])
  campaign Campaign @relation(fields: [campaignId], references: [id])

  authorId   Int
  campaignId Int
}

model Deposit {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  token      String?
  network    String?
  address    String?
  blockchain String?
  funded     Boolean  @default(false)
  message    String
  value      Decimal?

  post   Post @relation(fields: [postId], references: [id])
  postId Int  @unique
}

model User {
  id              Int      @id @default(autoincrement())
  twitterUsername String?  @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  posts Post[]
}

model Campaign {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  title            String   @unique
  description      String?
  // deve ser setado pela listener do smart contract
  tokenName        String?
  tokenSymbol      String?
  tokenAddress     String?
  network          String?
  blockchain       String?
  valuePerShare    Decimal?
  totalValue       Int?
  // deve ser setado pela listener do smart contract
  mandatoryContent String[]
  forbiddenContent String[]
  suggestion       String
  published        Boolean? @default(true)

  posts   Post[]
  creator Creator   @relation(fields: [creatorId], references: [id])

  creatorId Int
}

model Creator {
  id            Int        @id @default(autoincrement())
  walletAddress String
  campaigns     Campaign[]
}
